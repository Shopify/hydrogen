# Test Upgrade Flow Workflow
#
# Purpose:
# This workflow validates that the Hydrogen CLI upgrade command works correctly when
# changelog.json is modified. It ensures that users can successfully upgrade their
# Hydrogen projects to new versions without encountering dependency conflicts or
# runtime errors.
#
# What it tests:
# 1. Dynamic version detection from local changelog.json
# 2. Scaffolds a historical Hydrogen project from git history
# 3. Runs the actual `hydrogen upgrade` command with the latest version
# 4. Validates that npm install succeeds without dependency conflicts
# 5. Verifies the dev server starts without import/module errors
# 6. Makes HTTP requests to ensure the app serves HTML without errors
#
# When it runs:
# - On push/PR when docs/changelog.json is modified
# - Manual trigger via workflow_dispatch
#
# Key validations:
# - No npm dependency resolution errors (ERESOLVE, peer deps, etc.)
# - No missing module or import errors during runtime
# - Dev server successfully serves pages
# - Build and typecheck commands succeed
#
# This is critical for ensuring new releases don't break the upgrade path for users.

name: Test Upgrade Flow

on:
  push:
    paths:
      - 'docs/changelog.json'
  pull_request:
    paths:
      - 'docs/changelog.json'
  workflow_dispatch:

jobs:
  test-upgrade-flow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build:pkg

      - name: Run upgrade flow tests
        run: |
          cd packages/cli
          npm test upgrade-flow.test.ts
        env:
          FORCE_CHANGELOG_SOURCE: local
          SHOPIFY_HYDROGEN_FLAG_FORCE: 1

      - name: Report test results
        if: always()
        run: |
          echo "âœ… Upgrade flow tests completed"
          echo "These tests verify dynamic version detection from changelog.json"