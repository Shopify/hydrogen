# yaml-language-server: $schema=../../recipe.schema.json

title: Subscriptions
image: null
description: |
  This recipe adds subscription capabilities to your Hydrogen storefront by implementing [selling plan groups](https://shopify.dev/docs/api/storefront/latest/objects/SellingPlanGroup) and options. Customers can choose between one-time purchases or recurring subscriptions when available.

  The implementation:
  1. Modifies product detail pages to display subscription options with accurate pricing
  2. Adds a SellingPlanSelector component that presents available subscription options
  3. Enhances GraphQL fragments to fetch all necessary selling plan data
  4. Displays subscription details on applicable cart line items

  With this recipe, merchants can offer flexible purchasing options while maintaining a seamless customer experience.
notes: []
deletedFiles: []
ingredients:
  - path: templates/skeleton/app/components/SellingPlanSelector.tsx
    description: The `SellingPlanSelector` component is used to display the
      available subscription options on product pages.
  - path: templates/skeleton/app/styles/selling-plan.css
    description: The `selling-plan.css` file is used to style the
      `SellingPlanSelector` component.
steps:
  - type: INFO
    name: Requirements
    description: >
      To implement subscriptions in your own store make sure to:

      1. Install a [Shopify
      Subscriptions](https://apps.shopify.com/shopify-subscriptions) app

      2. Use the app to create selling plans for your products

      3. Assign these selling plans to any products you want to offer as
      subscriptions


      _For demo purposes, this recipe comes pre-configured for our demo
      storefront using an example subscription product with the handle
      `shopify-wax`._
  - type: COPY_INGREDIENTS
    name: Copy ingredients
    description: Copy the ingredients from the template directory to the current directory.
    ingredients:
      - templates/skeleton/app/components/SellingPlanSelector.tsx
      - templates/skeleton/app/styles/selling-plan.css
  - type: PATCH
    name: Render the selling plan in the cart
    description: >
      - Update `CartLineItem` to show subscription information when available.

      - Extract `sellingPlanAllocation` from cart line data and display the plan
      name. Also standardizes component import paths.
    diffs:
      - file: app/components/CartLineItem.tsx
        patchFile: CartLineItem.tsx.8e657b.patch
  - type: PATCH
    name: Update `ProductForm`
    description: >
      - Enhance `ProductForm` to support subscription functionality.

      - Add conditional rendering to display either subscription options or
      standard variant selectors.

      - Implement `SellingPlanSelector` and `SellingPlanGroup` components to
      handle subscription plan selection.

      - Update `AddToCartButton` to include selling plan data when subscriptions
      are selected.
    diffs:
      - file: app/components/ProductForm.tsx
        patchFile: ProductForm.tsx.8e409a.patch
  - type: PATCH
    name: Update `ProductPrice`
    description: >
      - Enhance `ProductPrice` component to display subscription pricing.

      - Add `SellingPlanPrice` function that calculates adjusted prices based on
      subscription plan type (fixed amount, fixed price, or percentage).

      - Handle different price adjustment types and render the appropriate
      subscription price when a selling plan is selected.
    diffs:
      - file: app/components/ProductPrice.tsx
        patchFile: ProductPrice.tsx.a5e47f.patch
  - type: PATCH
    name: Add Selling Plan Data to Cart Queries
    description: >
      Add `sellingPlanAllocation` field with plan name to both standard and
      componentizable cart line GraphQL fragments, enabling subscription details
      display in cart.
    diffs:
      - file: app/lib/fragments.ts
        patchFile: fragments.ts.e8eb04.patch
  - type: PATCH
    name: Add `SellingPlanSelector` to product pages
    description: >
      - Add `SellingPlanSelector` component to display subscription options on
      product pages.

      - Handle pricing adjustments, maintain selection state via URL parameters,
      and updates add-to-cart functionality.

      - Fetch subscription data through the updated cart GraphQL fragments.
    diffs:
      - file: app/routes/products.$handle.tsx
        patchFile: products.$handle.tsx.3e0b7e.patch
commit: cd76a0df1a585b9e3f6e615bc2cb67c39a3e7a76
