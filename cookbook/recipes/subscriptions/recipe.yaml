# yaml-language-server: $schema=../../recipe.schema.json

title: Subscriptions
image: null
description: This recipe demonstrates how to implement subscription
  functionality in a Shopify Hydrogen storefront. It enables customers to
  purchase products on a recurring basis by integrating with Shopify's selling
  plans. The recipe adds a subscription selector component that allows customers
  to choose from available subscription options (such as delivery frequency)
  when purchasing eligible products. It modifies the cart to display selected
  subscription details and handles the proper pricing adjustments based on the
  chosen subscription plan. The implementation includes UI components for
  selecting subscription options, logic for calculating subscription pricing,
  and integration with Shopify's cart functionality to properly process
  subscription orders. This feature enhances the storefront by providing
  customers with flexible purchasing options beyond one-time purchases.
notes: []
deletedFiles:
  - templates/skeleton/app/components/ProductForm.tsx
ingredients:
  - path: templates/skeleton/app/components/Cart.tsx
    description: Cart component modified to display selected subscription.
  - path: templates/skeleton/app/components/SellingPlanSelector.tsx
    description: A component that simplifies selecting sellingPlans subscription options
  - path: templates/skeleton/app/styles/selling-plan.css
    description: The CSS file for the selling plan.
steps:
  - type: INFO
    name: Requirements
    description: >-
      This example is connected to the `hydrogen-preview` storefront which
      contains one example subscription product (`shopify-wax`).


      To run this example on your own store, you'll need to:


      - Install a [subscription
      app](https://apps.shopify.com/shopify-subscriptions).

      - Use the subscription app to create a selling plan for a product.
  - type: COPY_INGREDIENTS
    name: Copy ingredients
    description: Copy the ingredients from the template directory to the current directory.
    ingredients:
      - templates/skeleton/app/components/Cart.tsx
      - templates/skeleton/app/components/SellingPlanSelector.tsx
      - templates/skeleton/app/styles/selling-plan.css
  - type: PATCH
    name: app/components/CartLineItem.tsx
    description: |-
      - get the selling plan allocation.
      - Optionally render the selling plan name if available.
    diffs:
      - file: app/components/CartLineItem.tsx
        patchFile: CartLineItem.tsx.8e657b.patch
  - type: PATCH
    name: app/lib/fragments.ts
    description: null
    diffs:
      - file: app/lib/fragments.ts
        patchFile: fragments.ts.e8eb04.patch
  - type: PATCH
    name: app/routes/_index.tsx
    description: null
    diffs:
      - file: app/routes/_index.tsx
        patchFile: _index.tsx.8041d5.patch
  - type: PATCH
    name: app/routes/products.$handle.tsx
    description: |-
      - Import the SellingPlanSelector component and type.
      - Get the selected selling plan id from the request url.
      - Get the selected selling plan from the product.
      - If the product includes selling plans but no selling plan is selected,.
      - Pass the selectedSellingPlan to the client.
      - Add the SellingPlanSelector component inside the ProductForm.
      - Render the SellingPlanGroup component inside the SellingPlanSelector.
      - Add the SellingPlanGroup fragment to the Product fragment.
      - Add the SellingPlanGroup fragment to the Product fragment.
    diffs:
      - file: app/routes/products.$handle.tsx
        patchFile: products.$handle.tsx.3e0b7e.patch
  - type: PATCH
    name: Codegen
    diffs:
      - file: storefrontapi.generated.d.ts
        patchFile: storefrontapi.generated.d.ts.92ed93.patch
commit: 74ef1ba7d41988350e9d2c81731c90381943d1f0
llms:
  userQueries:
    - How do I implement subscriptions in my Hydrogen store?
    - What are selling plans in Shopify?
    - How do I display subscription options on a product page?
    - How can I show subscription pricing on my Hydrogen site?
    - How do I modify my cart to display selected subscriptions?
    - What changes do I need to make to my product page to support subscriptions?
    - How do I add subscription functionality to my Hydrogen store?
    - What are the requirements for implementing subscriptions in Hydrogen?
    - How do I install a subscription app for my Shopify store?
    - How do I create a selling plan for a product?
    - How do I display different subscription options to customers?
    - How do I handle subscription pricing calculations in Hydrogen?
    - What GraphQL fragments do I need for subscriptions?
    - How do I show subscription details in the cart?
    - How do I style subscription options on my product page?
  troubleshooting:
    - issue: Why isn't my subscription option showing up on the product page?
      solution: Make sure you have a subscription app installed in your Shopify store
        and have created a selling plan for the product. The recipe requires a
        subscription app to be installed and selling plans to be created for
        products to display subscription options.
    - issue: The subscription price isn't calculating correctly
      solution: Check the `SellingPlanPrice` component in the product page. The price
        calculation is based on the selling plan price adjustments. Make sure
        your selling plan has the correct price adjustments configured in your
        Shopify admin.
    - issue: Subscription options aren't being saved in the cart
      solution: Ensure the `sellingPlanId` is being passed correctly in the
        `AddToCartButton` component. The recipe adds the selling plan ID to the
        cart line item when a subscription option is selected.
    - issue: The cart isn't showing the selected subscription details
      solution: Check that the `CartLineItem.tsx` file has been updated to include the
        selling plan allocation display. The recipe modifies this file to show
        the selling plan name in the cart.
    - issue: I'm getting an error about missing selling plan fragments in GraphQL
      solution: Make sure you've added all the required GraphQL fragments in
        `app/routes/products.$handle.tsx`. The recipe adds several fragments
        including `SELLING_PLAN_FRAGMENT` and `SELLING_PLAN_GROUP_FRAGMENT` that
        are necessary for querying subscription data.
    - issue: The subscription styling doesn't match the example
      solution: Verify that you've imported the selling plan CSS file correctly. The
        recipe adds a CSS file at `app/styles/selling-plan.css` and imports it
        in the product page using the `links` export.
    - issue: The default subscription option isn't being selected automatically
      solution: Check the redirect logic in the loader function of
        `products.$handle.tsx`. The recipe includes code to redirect to the
        first selling plan if none is selected, ensuring a default option is
        always selected.
    - issue: Cart fragment is missing selling plan data
      solution: Ensure you've updated the `CART_QUERY_FRAGMENT` in
        `app/lib/fragments.ts` to include the selling plan allocation. The
        recipe modifies this fragment to include the selling plan name in cart
        queries.
