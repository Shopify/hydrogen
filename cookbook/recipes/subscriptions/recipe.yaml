# yaml-language-server: $schema=../../recipe.schema.json

title: Subscriptions
image: null
description: |
  This recipe adds subscription capabilities to your Hydrogen storefront by implementing [selling plan groups](https://shopify.dev/docs/api/storefront/latest/objects/SellingPlanGroup) and options. Customers can choose between one-time purchases or recurring subscriptions when available.

  The implementation:
  1. Modifies product detail pages to display subscription options with accurate pricing
  2. Adds a SellingPlanSelector component that presents available subscription options
  3. Enhances GraphQL fragments to fetch all necessary selling plan data
  4. Displays subscription details on applicable cart line items

  With this recipe, merchants can offer flexible purchasing options while maintaining a seamless customer experience.
notes: []
deletedFiles: []
ingredients:
  - path: templates/skeleton/app/components/SellingPlanSelector.tsx
    description: The `SellingPlanSelector` component is used to display the
      available subscription options on product pages.
  - path: templates/skeleton/app/styles/selling-plan.css
    description: The `selling-plan.css` file is used to style the
      `SellingPlanSelector` component.
steps:
  - type: INFO
    name: Requirements
    description: >
      To implement subscriptions in your own store make sure to:

      1. Install a [Shopify
      Subscriptions](https://apps.shopify.com/shopify-subscriptions) app

      2. Use the app to create selling plans for your products

      3. Assign these selling plans to any products you want to offer as
      subscriptions


      _For demo purposes, this recipe comes pre-configured for our demo
      storefront using an example subscription product with the handle
      `shopify-wax`._
  - type: COPY_INGREDIENTS
    name: Copy ingredients
    description: Copy the ingredients from the template directory to the current directory.
    ingredients:
      - templates/skeleton/app/components/SellingPlanSelector.tsx
      - templates/skeleton/app/styles/selling-plan.css
  - type: PATCH
    name: Render the selling plan in the cart
    description: >
      - Update `CartLineItem` to show subscription information when available.

      - Extract `sellingPlanAllocation` from cart line data and display the plan
      name. Also standardizes component import paths.
    diffs:
      - file: app/components/CartLineItem.tsx
        patchFile: CartLineItem.tsx.8e657b.patch
  - type: PATCH
    name: Update `ProductForm`
    description: >
      - Enhance `ProductForm` to support subscription functionality.

      - Add conditional rendering to display either subscription options or
      standard variant selectors.

      - Implement `SellingPlanSelector` and `SellingPlanGroup` components to
      handle subscription plan selection.

      - Update `AddToCartButton` to include selling plan data when subscriptions
      are selected.
    diffs:
      - file: app/components/ProductForm.tsx
        patchFile: ProductForm.tsx.8e409a.patch
  - type: PATCH
    name: Update `ProductPrice`
    description: >
      - Enhance `ProductPrice` component to display subscription pricing.

      - Add `SellingPlanPrice` function that calculates adjusted prices based on
      subscription plan type (fixed amount, fixed price, or percentage).

      - Handle different price adjustment types and render the appropriate
      subscription price when a selling plan is selected.
    diffs:
      - file: app/components/ProductPrice.tsx
        patchFile: ProductPrice.tsx.a5e47f.patch
  - type: PATCH
    name: Add Selling Plan Data to Cart Queries
    description: >
      Add `sellingPlanAllocation` field with plan name to both standard and
      componentizable cart line GraphQL fragments, enabling subscription details
      display in cart.
    diffs:
      - file: app/lib/fragments.ts
        patchFile: fragments.ts.e8eb04.patch
  - type: PATCH
    name: Add `SellingPlanSelector` to product pages
    description: >
      - Add `SellingPlanSelector` component to display subscription options on
      product pages.

      - Handle pricing adjustments, maintain selection state via URL parameters,
      and updates add-to-cart functionality.

      - Fetch subscription data through the updated cart GraphQL fragments.
    diffs:
      - file: app/routes/products.$handle.tsx
        patchFile: products.$handle.tsx.3e0b7e.patch
commit: cd76a0df1a585b9e3f6e615bc2cb67c39a3e7a76
llms:
  userQueries:
    - How do I add subscriptions to my Hydrogen storefront?
    - What are selling plan groups in Shopify?
    - How can I display subscription options on product pages?
    - How do I show subscription details in the cart?
    - What's required to implement subscriptions in my Shopify store?
    - How do I handle subscription pricing in Hydrogen?
    - Can customers choose between one-time purchases and subscriptions?
    - How do I style the subscription selector component?
    - What GraphQL fragments do I need for subscriptions?
    - How do I update my cart to show subscription information?
    - How do I calculate adjusted prices for subscription plans?
    - What types of price adjustments are supported for subscriptions?
    - How do I maintain subscription selection state via URL parameters?
    - What apps do I need to install for subscription functionality?
    - How do I assign selling plans to products?
  troubleshooting:
    - issue: Why aren't my subscription options showing up on my product page?
      solution:
        "Make sure you've completed the requirements: 1) Install a Shopify
        Subscriptions app, 2) Create selling plans for your products using the
        app, and 3) Assign these selling plans to the products you want to offer
        as subscriptions. Also verify that your GraphQL queries include the
        necessary selling plan fragments."
    - issue: The subscription prices are not calculating correctly on my product page
      solution:
        "Check the `SellingPlanPrice` function in your `ProductPrice.tsx`
        file. Make sure it's correctly handling all three types of price
        adjustments: fixed amount, fixed price, and percentage. Verify that your
        GraphQL queries are fetching all the necessary price adjustment data."
    - issue: Subscription details are not showing up in the cart
      solution: Ensure you've updated both cart GraphQL fragments in
        `app/lib/fragments.ts` to include the `sellingPlanAllocation` field with
        the plan name. Also check that your `CartLineItem.tsx` component is
        correctly extracting and displaying the `sellingPlanAllocation` data.
    - issue: I'm getting an error when trying to add a subscription product to cart
      solution:
        Make sure your `AddToCartButton` component in `ProductForm.tsx` is
        correctly passing the `sellingPlanId` when a subscription is selected.
        Verify that the `selectedSellingPlan` is not null when attempting to add
        a subscription product to cart.
    - issue:
        The subscription options are not being maintained when I navigate between
        pages
      solution: Check that your URL parameter handling is working correctly. The
        recipe uses URL parameters to maintain the selected selling plan state.
        Verify that `selectedSellingPlanId` is being properly extracted from the
        URL in the loader function in `products.$handle.tsx`.
    - issue:
        The styling for my subscription options doesn't match the rest of my
        store
      solution: You can customize the styling by modifying the
        `app/styles/selling-plan.css` file. Make sure the CSS file is properly
        imported in your product page component with the `links` export.
    - issue: How do I test if my subscription implementation is working correctly?
      solution:
        You can test with the example product 'shopify-wax' mentioned in the
        recipe. Alternatively, create a test product with subscription options
        using your Shopify Subscriptions app, then verify that the subscription
        options appear on the product page, can be selected, and that the
        correct subscription details appear in the cart.
    - issue:
        My subscription products show both one-time purchase and subscription
        options, but I only want to offer subscriptions
      solution:
        The recipe is designed to show both options when available. If you
        want to offer subscription-only products, you'll need to modify the
        `ProductForm.tsx` component to remove the one-time purchase option and
        only display subscription options for those products.
    - issue:
        The subscription selector is not showing all my available subscription
        plans
      solution: Check your GraphQL queries to ensure you're fetching all selling
        plans. The current implementation limits to the first 10 selling plans
        with `sellingPlans(first:10)`. If you have more than 10 plans, you may
        need to increase this limit or implement pagination.
