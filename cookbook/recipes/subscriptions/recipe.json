{
  "title": "Subscriptions",
  "image": null,
  "userQueries": [
    "How do I add subscription options to my Hydrogen store?",
    "I want to let customers subscribe to products in my Shopify Hydrogen site",
    "Can you help me implement recurring orders in Hydrogen?",
    "How to show subscription pricing on product page in Hydrogen?",
    "Need help adding a 'Subscribe and Save' option to my products",
    "How do I modify the cart to show subscription details?",
    "Making a subscription box with Hydrogen and Shopify",
    "I've set up selling plans in Shopify admin, how do I display them in Hydrogen?",
    "Help implementing Shopify subscriptions in my Hydrogen storefront",
    "My selling plans aren't showing up in my Hydrogen store",
    "How to calculate and display subscription discounts in Hydrogen?",
    "Adding monthly subscription billing to Hydrogen products",
    "Implementing 'delivery every X weeks' options in Hydrogen",
    "How to let customers choose between one-time purchase and subscription?",
    "Setting up recurring delivery options on my Hydrogen product page"
  ],
  "troubleshooting": [
    {
      "issue": "Subscription options not appearing on product page",
      "solution": "Verify that you've created selling plans in Shopify admin and attached them to the product. Also ensure the `sellingPlanGroups` fragment is included in your product query."
    },
    {
      "issue": "Price calculations for subscriptions appear incorrect",
      "solution": "Check the selling plan price adjustments in your query. Make sure you're handling all three types of price adjustments: fixed amount, fixed price, and percentage."
    },
    {
      "issue": "Getting \"Cannot read properties of undefined\" when accessing selling plan data",
      "solution": "Add null checks when accessing selling plan data, as not all products have selling plans. Use optional chaining (`?.`) and nullish coalescing (`??`) operators."
    },
    {
      "issue": "Subscription options appear but selecting them doesn't affect the price",
      "solution": "Ensure the `SellingPlanPrice` component correctly calculates discounted prices based on the price adjustment type."
    },
    {
      "issue": "Selected subscription doesn't persist when navigating back to product",
      "solution": "Make sure your URL includes the `selling_plan` parameter and that your product route correctly processes this parameter."
    },
    {
      "issue": "Subscription details not appearing in cart",
      "solution": "Verify that your cart query includes the `sellingPlanAllocation` fragment and that the Cart component displays this information."
    },
    {
      "issue": "Subscribe button disabled even though selling plans are available",
      "solution": "Check the condition in your AddToCartButton component. It should only be disabled if no selling plan is selected when selling plans are available."
    },
    {
      "issue": "Multiple subscription groups causing UI confusion",
      "solution": "Implement a tabbed interface or clear labeling if your products have multiple subscription group options."
    },
    {
      "issue": "CSS for subscription selector not applying",
      "solution": "Ensure you've added the `selling-plan.css` import and that the stylesheet is correctly linked in your component."
    },
    {
      "issue": "Cannot read `sellingPlanGroups.nodes` of undefined",
      "solution": "Add null check logic: `{product?.sellingPlanGroups?.nodes?.length > 0 ? ... : ...}`"
    }
  ],
  "description": "This folder contains an example implementation of [subscriptions](https://shopify.dev/docs/apps/selling-strategies/subscriptions) for Hydrogen. It shows how to display selling plans on a product page.\n\n![subscriptions-example](https://github.com/Shopify/hydrogen/assets/12080141/1cea5fbf-5a56-4562-95a7-4821facb3c6d)",
  "notes": [],
  "deletedFiles": [
    "templates/skeleton/app/components/ProductForm.tsx"
  ],
  "ingredients": [
    {
      "path": "templates/skeleton/app/components/Cart.tsx",
      "description": "Cart component modified to display selected subscription."
    },
    {
      "path": "templates/skeleton/app/components/SellingPlanSelector.tsx",
      "description": "A component that simplifies selecting sellingPlans subscription options"
    },
    {
      "path": "templates/skeleton/app/styles/selling-plan.css",
      "description": "The CSS file for the selling plan."
    }
  ],
  "steps": [
    {
      "type": "INFO",
      "name": "Requirements",
      "description": "This example is connected to the `hydrogen-preview` storefront which contains one example subscription product (`shopify-wax`).\n\nTo run this example on your own store, you'll need to:\n\n- Install a [subscription app](https://apps.shopify.com/shopify-subscriptions).\n- Use the subscription app to create a selling plan for a product."
    },
    {
      "type": "COPY_INGREDIENTS",
      "name": "Copy ingredients",
      "description": "Copy the ingredients from the template directory to the current directory.",
      "ingredients": [
        "templates/skeleton/app/components/Cart.tsx",
        "templates/skeleton/app/components/SellingPlanSelector.tsx",
        "templates/skeleton/app/styles/selling-plan.css"
      ]
    },
    {
      "type": "PATCH",
      "name": "app/components/CartLineItem.tsx",
      "description": "- get the selling plan allocation.\n- Optionally render the selling plan name if available.",
      "diffs": [
        {
          "file": "app/components/CartLineItem.tsx",
          "patchFile": "CartLineItem.tsx.8e657b.patch"
        }
      ]
    },
    {
      "type": "PATCH",
      "name": "app/lib/fragments.ts",
      "description": null,
      "diffs": [
        {
          "file": "app/lib/fragments.ts",
          "patchFile": "fragments.ts.e8eb04.patch"
        }
      ]
    },
    {
      "type": "PATCH",
      "name": "app/routes/_index.tsx",
      "description": null,
      "diffs": [
        {
          "file": "app/routes/_index.tsx",
          "patchFile": "_index.tsx.8041d5.patch"
        }
      ]
    },
    {
      "type": "PATCH",
      "name": "app/routes/products.$handle.tsx",
      "description": "- Import the SellingPlanSelector component and type.\n- Get the selected selling plan id from the request url.\n- Get the selected selling plan from the product.\n- If the product includes selling plans but no selling plan is selected,.\n- Pass the selectedSellingPlan to the client.\n- Add the SellingPlanSelector component inside the ProductForm.\n- Render the SellingPlanGroup component inside the SellingPlanSelector.\n- Add the SellingPlanGroup fragment to the Product fragment.\n- Add the SellingPlanGroup fragment to the Product fragment.",
      "diffs": [
        {
          "file": "app/routes/products.$handle.tsx",
          "patchFile": "products.$handle.tsx.3e0b7e.patch"
        }
      ]
    },
    {
      "type": "PATCH",
      "name": "Codegen",
      "diffs": [
        {
          "file": "storefrontapi.generated.d.ts",
          "patchFile": "storefrontapi.generated.d.ts.92ed93.patch"
        }
      ]
    }
  ],
  "commit": "bc81bbdd33dc2bccf6d3535e0d89b13de1400e1a"
}