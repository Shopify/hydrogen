index 3426476a..f6c6f86b 100644
--- a/templates/skeleton/app/root.tsx
+++ b/templates/skeleton/app/root.tsx
@@ -1,5 +1,5 @@
 import {Analytics, getShopAnalytics, useNonce} from '@shopify/hydrogen';
-import {type LoaderFunctionArgs} from '@shopify/remix-oxygen';
+import {redirect, type LoaderFunctionArgs} from '@shopify/remix-oxygen';
 import {
   Outlet,
   useRouteError,
@@ -16,7 +16,7 @@ import {FOOTER_QUERY, HEADER_QUERY} from '~/lib/fragments';
 import resetStyles from '~/styles/reset.css?url';
 import appStyles from '~/styles/app.css?url';
 import {PageLayout} from './components/PageLayout';
-
+import {localeMatchesPrefix} from './lib/i18n';
 export type RootLoader = typeof loader;
 
 /**
@@ -74,9 +74,16 @@ export async function loader(args: LoaderFunctionArgs) {
 
   const {storefront, env} = args.context;
 
+  // use the locale key from the URL params; make sure the key name matches what's used in the route definition (e.g. `($locale).myRoute.tsx`)
+  const localeSegment = args.params.locale;
+  if (!localeMatchesPrefix(localeSegment ?? null)) {
+    throw new Response(null, {status: 404});
+  }
+
   return {
     ...deferredData,
     ...criticalData,
+    selectedLocale: args.context.storefront.i18n,
     publicStoreDomain: env.PUBLIC_STORE_DOMAIN,
     shop: getShopAnalytics({
       storefront,
@@ -162,7 +169,12 @@ export function Layout({children}: {children?: React.ReactNode}) {
             shop={data.shop}
             consent={data.consent}
           >
-            <PageLayout {...data}>{children}</PageLayout>
+            <PageLayout
+              key={`${data.selectedLocale.language}-${data.selectedLocale.country}`}
+              {...data}
+            >
+              {children}
+            </PageLayout>
           </Analytics.Provider>
         ) : (
           children
