index 1672af417..a0bc25139 100644
--- a/templates/skeleton/app/lib/context.ts
+++ b/templates/skeleton/app/lib/context.ts
@@ -1,25 +1,41 @@
 import {createHydrogenContext} from '@shopify/hydrogen';
 import {AppSession} from '~/lib/session';
 import {CART_QUERY_FRAGMENT} from '~/lib/fragments';
+// @description Import the Rick and Morty client for third-party GraphQL queries
+import {createRickAndMortyClient} from '~/lib/createRickAndMortyClient.server';
 
-// Define the additional context object
-const additionalContext = {
+// @description Define the additional context object with the third-party client
+const additionalContext = ({
+  cache,
+  waitUntil,
+  request,
+}: {
+  cache: Cache;
+  waitUntil: (promise: Promise<any>) => void;
+  request: Request;
+}) => ({
   // Additional context for custom properties, CMS clients, 3P SDKs, etc.
   // These will be available as both context.propertyName and context.get(propertyContext)
   // Example of complex objects that could be added:
   // cms: await createCMSClient(env),
   // reviews: await createReviewsClient(env),
-} as const;
+  // @description Pass the Rick and Morty client to the action and loader context
+  rickAndMorty: createRickAndMortyClient({
+    cache,
+    waitUntil,
+    request,
+  }),
+} as const);
 
 // Automatically augment HydrogenAdditionalContext with the additional context type
-type AdditionalContextType = typeof additionalContext;
+type AdditionalContextType = ReturnType<typeof additionalContext>;
 
 declare global {
   interface HydrogenAdditionalContext extends AdditionalContextType {}
 }
 
 /**
- * Creates Hydrogen context for React Router 7.8.x
+ * Creates Hydrogen context for React Router 7.8.x with third-party API support
  * Returns HydrogenRouterContextProvider with hybrid access patterns
  * */
 export async function createHydrogenRouterContext(
@@ -41,6 +57,13 @@ export async function createHydrogenRouterContext(
     AppSession.init(request, [env.SESSION_SECRET]),
   ]);
 
+  // @description Create the additional context with third-party client
+  const contextWithThirdParty = additionalContext({
+    cache,
+    waitUntil,
+    request,
+  });
+
   const hydrogenContext = await createHydrogenContext(
     {
       env,
@@ -57,7 +80,7 @@ export async function createHydrogenRouterContext(
         enabled: true,
       },
     },
-    additionalContext,
+    contextWithThirdParty,
   );
 
   return hydrogenContext;
