# yaml-language-server: $schema=../../recipe.schema.json

gid: 99596983-f4f0-4285-8f88-9112794cb812
title: Express server
summary: Deploy Hydrogen on Node.js with Express instead of Shopify Oxygen
description: |
  This recipe transforms a Hydrogen skeleton template to run on a standard Node.js Express server,
  making it deployable to any Node.js hosting platform instead of Shopify Oxygen. It maintains core
  Hydrogen functionality including GraphQL codegen and Storefront API integration while replacing
  Oxygen-specific features with Express equivalents.

  Key changes:
  - Replaces Oxygen server with Express server
  - Uses Vite for development with hot module replacement
  - Implements session management through Express middleware
  - Provides production-ready server configuration
  - Keeps GraphQL codegen functionality intact

  Technical details:
  - Uses nodemon for development server with automatic restarts
  - Environment variables are loaded from .env file using dotenv
  - Session management is handled through Express middleware with SESSION_SECRET
  - GraphQL codegen still works with Storefront API types
  - Compatible with React Router 7.8.x
  - The .graphqlrc.ts file is preserved with customer account section commented out
notes: []
requirements: |
  - Node.js 20 or higher (less than 22.0.0) for production deployment
  - npm or yarn package manager
  - Shopify Storefront API credentials
ingredients:
  - path: templates/skeleton/app/env.ts
    description: Environment type definitions for Express server
  - path: templates/skeleton/public/favicon.svg
    description: Favicon for Express template
  - path: templates/skeleton/scripts/dev.mjs
    description: Development orchestration script
  - path: templates/skeleton/server.mjs
    description: Express server with Hydrogen context and SSR
deletedFiles:
  - templates/skeleton/app/components/AddToCartButton.tsx
  - templates/skeleton/app/components/Aside.tsx
  - templates/skeleton/app/components/CartLineItem.tsx
  - templates/skeleton/app/components/CartMain.tsx
  - templates/skeleton/app/components/CartSummary.tsx
  - templates/skeleton/app/components/Footer.tsx
  - templates/skeleton/app/components/Header.tsx
  - templates/skeleton/app/components/PageLayout.tsx
  - templates/skeleton/app/components/PaginatedResourceSection.tsx
  - templates/skeleton/app/components/ProductForm.tsx
  - templates/skeleton/app/components/ProductImage.tsx
  - templates/skeleton/app/components/ProductItem.tsx
  - templates/skeleton/app/components/ProductPrice.tsx
  - templates/skeleton/app/components/SearchForm.tsx
  - templates/skeleton/app/components/SearchFormPredictive.tsx
  - templates/skeleton/app/components/SearchResults.tsx
  - templates/skeleton/app/components/SearchResultsPredictive.tsx
  - templates/skeleton/app/graphql/customer-account/CustomerAddressMutations.ts
  - templates/skeleton/app/graphql/customer-account/CustomerDetailsQuery.ts
  - templates/skeleton/app/graphql/customer-account/CustomerOrderQuery.ts
  - templates/skeleton/app/graphql/customer-account/CustomerOrdersQuery.ts
  - templates/skeleton/app/graphql/customer-account/CustomerUpdateMutation.ts
  - templates/skeleton/app/lib/context.ts
  - templates/skeleton/app/lib/fragments.ts
  - templates/skeleton/app/lib/redirect.ts
  - templates/skeleton/app/lib/search.ts
  - templates/skeleton/app/lib/session.ts
  - templates/skeleton/app/lib/variants.ts
  - templates/skeleton/app/routes/$.tsx
  - templates/skeleton/app/routes/[robots.txt].tsx
  - templates/skeleton/app/routes/[sitemap.xml].tsx
  - templates/skeleton/app/routes/account.$.tsx
  - templates/skeleton/app/routes/account._index.tsx
  - templates/skeleton/app/routes/account.addresses.tsx
  - templates/skeleton/app/routes/account.orders.$id.tsx
  - templates/skeleton/app/routes/account.orders._index.tsx
  - templates/skeleton/app/routes/account.profile.tsx
  - templates/skeleton/app/routes/account.tsx
  - templates/skeleton/app/routes/account_.authorize.tsx
  - templates/skeleton/app/routes/account_.login.tsx
  - templates/skeleton/app/routes/account_.logout.tsx
  - templates/skeleton/app/routes/api.$version.[graphql.json].tsx
  - templates/skeleton/app/routes/blogs.$blogHandle.$articleHandle.tsx
  - templates/skeleton/app/routes/blogs.$blogHandle._index.tsx
  - templates/skeleton/app/routes/blogs._index.tsx
  - templates/skeleton/app/routes/cart.$lines.tsx
  - templates/skeleton/app/routes/cart.tsx
  - templates/skeleton/app/routes/collections.$handle.tsx
  - templates/skeleton/app/routes/collections._index.tsx
  - templates/skeleton/app/routes/collections.all.tsx
  - templates/skeleton/app/routes/discount.$code.tsx
  - templates/skeleton/app/routes/pages.$handle.tsx
  - templates/skeleton/app/routes/policies.$handle.tsx
  - templates/skeleton/app/routes/policies._index.tsx
  - templates/skeleton/app/routes/search.tsx
  - templates/skeleton/app/routes/sitemap.$type.$page[.xml].tsx
  - templates/skeleton/app/styles/reset.css
  - templates/skeleton/customer-accountapi.generated.d.ts
  - templates/skeleton/env.d.ts
  - templates/skeleton/server.ts
steps:
  - type: PATCH
    step: "1"
    name: Disable customer account API
    description: Comment out customer account GraphQL configuration
    diffs:
      - file: .graphqlrc.ts
        patchFile: .graphqlrc.ts.dbb3fe.patch
  - type: PATCH
    step: "2"
    name: Update README for Express deployment
    description: Update README with Express-specific setup and deployment instructions
    diffs:
      - file: README.md
        patchFile: README.md.db10ed.patch
  - type: NEW_FILE
    step: "3"
    name: Add environment type definitions
    description: Add environment type definitions for Hydrogen on Express
    ingredients:
      - path: templates/skeleton/app/env.ts
  - type: PATCH
    step: "4"
    name: Set up client-side hydration
    description: Update client entry to use React Router hydration without
      Oxygen-specific code
    diffs:
      - file: app/entry.client.tsx
        patchFile: entry.client.tsx.0b6923.patch
  - type: NEW_FILE
    step: "5"
    name: Add the Express template favicon
    description: Add Express template favicon
    ingredients:
      - path: templates/skeleton/public/favicon.svg
  - type: PATCH
    step: "6"
    name: Configure server-side rendering
    description: Replace Oxygen server rendering with Express-compatible Node.js SSR
      using PassThrough streams
    diffs:
      - file: app/entry.server.tsx
        patchFile: entry.server.tsx.b35f11.patch
  - type: NEW_FILE
    step: "7"
    name: Set up the development server
    description: Add development server orchestration script for Vite and nodemon
    ingredients:
      - path: templates/skeleton/scripts/dev.mjs
  - type: PATCH
    step: "8"
    name: Simplify the root layout
    description: Simplify root layout for Express template by removing complex components
    diffs:
      - file: app/root.tsx
        patchFile: root.tsx.5e9998.patch
  - type: NEW_FILE
    step: "9"
    name: Create the Express server
    description: Add Express server with Hydrogen context, session management, and
      SSR support
    ingredients:
      - path: templates/skeleton/server.mjs
  - type: PATCH
    step: "10"
    name: Configure routes for Express
    description: Update routes configuration to work with Hydrogen on Express
    diffs:
      - file: app/routes.ts
        patchFile: routes.ts.87938f.patch
  - type: PATCH
    step: "11"
    name: Create a basic homepage
    description: Simplify homepage route to basic Express example content
    diffs:
      - file: app/routes/_index.tsx
        patchFile: _index.tsx.243e26.patch
  - type: PATCH
    step: "12"
    name: Add a minimal product page
    description: Simplify product route to minimal implementation without cart functionality
    diffs:
      - file: app/routes/products.$handle.tsx
        patchFile: products.$handle.tsx.6f2e82.patch
  - type: PATCH
    step: "13"
    name: Add basic styles
    description: Replace skeleton styles with minimal Express template styling
    diffs:
      - file: app/styles/app.css
        patchFile: app.css.881a99.patch
  - type: PATCH
    step: "14"
    name: Update ESLint configuration
    description: Simplify ESLint configuration for Express template
    diffs:
      - file: eslint.config.js
        patchFile: eslint.config.js.e5f62b.patch
  - type: PATCH
    step: "15"
    name: Install Express dependencies
    description: Update dependencies and scripts for Express server deployment (add
      express, nodemon, compression, remove Oxygen packages)
    diffs:
      - file: package.json
        patchFile: package.json.f30b0a.patch
  - type: PATCH
    step: "16"
    name: Configure Vite for Node.js
    description: Configure Vite for Express deployment with Node.js module externalization
    diffs:
      - file: vite.config.ts
        patchFile: vite.config.ts.475b4c.patch
nextSteps: |
  1. Create a `.env` file with your Shopify Storefront API credentials:
    ```
    PUBLIC_STOREFRONT_API_TOKEN="your-token"
    PUBLIC_STORE_DOMAIN="your-store.myshopify.com"
    PUBLIC_STOREFRONT_ID="your-storefront-id"
    SESSION_SECRET="your-session-secret-at-least-32-chars"
    ```
  2. Run `npm install` to install Express and other Node.js dependencies
  3. Run `npm run dev` to start the development server with hot reload
  4. For production, run `npm run build` followed by `npm start`
  5. Deploy to your preferred Node.js hosting platform (Heroku, AWS, Vercel, Railway, etc.)
llms:
  userQueries:
    - How do I deploy Hydrogen to Node.js instead of Oxygen?
    - How can I use Express with Hydrogen?
    - How do I deploy Hydrogen to Heroku/AWS/Vercel?
    - How to run Hydrogen without Shopify Oxygen?
    - Can I use Hydrogen with my own server?
  troubleshooting:
    - issue: "Error: [h2:error:createStorefrontClient] `storeDomain` is required"
      solution: Create a .env file with your Shopify store credentials. See the
        nextSteps section for required environment variables.
    - issue: "Cannot read file: fs/path/stream errors during build"
      solution: This is expected. The vite.config.ts properly externalizes Node.js
        built-in modules for the Express server.
    - issue: GraphQL codegen fails with 'Unable to find any GraphQL type definitions'
      solution: The recipe preserves GraphQL functionality. Make sure .graphqlrc.ts
        exists and your GraphQL queries use the gql template literal.
    - issue: Port already in use when running npm run dev
      solution: The Express server defaults to port 3000. Either stop the process
        using that port or set PORT environment variable to a different port.
    - issue: TypeScript errors about missing @react-router/node types
      solution: Run 'npm install' to ensure all dependencies including @types packages
        are installed.
commit: 4f5db289f8a9beb5c46dda9416a7ae8151f7e08e
