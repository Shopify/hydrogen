index fdc2997a..d2eda8b7 100644
--- a/templates/skeleton/customer-accountapi.generated.d.ts
+++ b/templates/skeleton/customer-accountapi.generated.d.ts
@@ -172,6 +172,43 @@ export type CustomerDetailsQuery = {
   };
 };
 
+export type CustomerLocationsQueryVariables = CustomerAccountAPI.Exact<{
+  [key: string]: never;
+}>;
+
+export type CustomerLocationsQuery = {
+  customer: Pick<CustomerAccountAPI.Customer, 'id'> & {
+    emailAddress?: CustomerAccountAPI.Maybe<
+      Pick<CustomerAccountAPI.CustomerEmailAddress, 'emailAddress'>
+    >;
+    companyContacts: {
+      edges: Array<{
+        node: {
+          company?: CustomerAccountAPI.Maybe<
+            Pick<CustomerAccountAPI.Company, 'id' | 'name'> & {
+              locations: {
+                edges: Array<{
+                  node: Pick<
+                    CustomerAccountAPI.CompanyLocation,
+                    'id' | 'name'
+                  > & {
+                    shippingAddress?: CustomerAccountAPI.Maybe<
+                      Pick<
+                        CustomerAccountAPI.CompanyAddress,
+                        'countryCode' | 'formattedAddress'
+                      >
+                    >;
+                  };
+                }>;
+              };
+            }
+          >;
+        };
+      }>;
+    };
+  };
+};
+
 export type OrderMoneyFragment = Pick<
   CustomerAccountAPI.MoneyV2,
   'amount' | 'currencyCode'
@@ -474,6 +511,10 @@ interface GeneratedQueryTypes {
     return: CustomerDetailsQuery;
     variables: CustomerDetailsQueryVariables;
   };
+  '#graphql\n  query CustomerLocations {\n    customer {\n      id\n      emailAddress {\n        emailAddress\n      }\n      companyContacts(first: 1){\n        edges{\n          node{\n            company{\n              id\n              name\n              locations(first: 10){\n                edges{\n                  node{\n                    id\n                    name\n                    shippingAddress {\n                      countryCode\n                      formattedAddress\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n': {
+    return: CustomerLocationsQuery;
+    variables: CustomerLocationsQueryVariables;
+  };
   '#graphql\n  fragment OrderMoney on MoneyV2 {\n    amount\n    currencyCode\n  }\n  fragment DiscountApplication on DiscountApplication {\n    value {\n      __typename\n      ... on MoneyV2 {\n        ...OrderMoney\n      }\n      ... on PricingPercentageValue {\n        percentage\n      }\n    }\n  }\n  fragment OrderLineItemFull on LineItem {\n    id\n    title\n    quantity\n    price {\n      ...OrderMoney\n    }\n    discountAllocations {\n      allocatedAmount {\n        ...OrderMoney\n      }\n      discountApplication {\n        ...DiscountApplication\n      }\n    }\n    totalDiscount {\n      ...OrderMoney\n    }\n    image {\n      altText\n      height\n      url\n      id\n      width\n    }\n    variantTitle\n  }\n  fragment Order on Order {\n    id\n    name\n    statusPageUrl\n    processedAt\n    fulfillments(first: 1) {\n      nodes {\n        status\n      }\n    }\n    totalTax {\n      ...OrderMoney\n    }\n    totalPrice {\n      ...OrderMoney\n    }\n    subtotal {\n      ...OrderMoney\n    }\n    shippingAddress {\n      name\n      formatted(withName: true)\n      formattedArea\n    }\n    discountApplications(first: 100) {\n      nodes {\n        ...DiscountApplication\n      }\n    }\n    lineItems(first: 100) {\n      nodes {\n        ...OrderLineItemFull\n      }\n    }\n  }\n  query Order($orderId: ID!) {\n    order(id: $orderId) {\n      ... on Order {\n        ...Order\n      }\n    }\n  }\n': {
     return: OrderQuery;
     variables: OrderQueryVariables;
