index 608402fb..e90a4835 100644
--- a/templates/skeleton/app/root.tsx
+++ b/templates/skeleton/app/root.tsx
@@ -1,4 +1,4 @@
-import {useNonce, getShopAnalytics, Analytics} from '@shopify/hydrogen';
+import {Script, useNonce, getShopAnalytics, Analytics} from '@shopify/hydrogen';
 import {type LoaderFunctionArgs} from '@shopify/remix-oxygen';
 import {
   Links,
@@ -16,6 +16,10 @@ import resetStyles from '~/styles/reset.css?url';
 import appStyles from '~/styles/app.css?url';
 import {PageLayout} from '~/components/PageLayout';
 import {FOOTER_QUERY, HEADER_QUERY} from '~/lib/fragments';
+import {PartytownGoogleTagManager} from '~/components/PartytownGoogleTagManager';
+import {Partytown} from '@builder.io/partytown/react';
+import {maybeProxyRequest} from '~/utils/partytown/maybeProxyRequest';
+import {partytownAtomicHeaders} from '~/utils/partytown/partytownAtomicHeaders';
 
 export type RootLoader = typeof loader;
 
@@ -28,16 +32,15 @@ export const shouldRevalidate: ShouldRevalidateFunction = ({
   nextUrl,
 }) => {
   // revalidate when a mutation is performed e.g add to cart, login...
-  if (formMethod && formMethod !== 'GET') return true;
+  if (formMethod && formMethod !== 'GET') {
+    return true;
+  }
 
   // revalidate when manually revalidating via useRevalidator
-  if (currentUrl.toString() === nextUrl.toString()) return true;
+  if (currentUrl.toString() === nextUrl.toString()) {
+    return true;
+  }
 
-  // Defaulting to no revalidation for root loader data to improve performance. 
-  // When using this feature, you risk your UI getting out of sync with your server. 
-  // Use with caution. If you are uncomfortable with this optimization, update the 
-  // line below to `return defaultShouldRevalidate` instead.
-  // For more details see: https://remix.run/docs/en/main/route/should-revalidate
   return false;
 };
 
@@ -85,11 +88,12 @@ export async function loader(args: LoaderFunctionArgs) {
     consent: {
       checkoutDomain: env.PUBLIC_CHECKOUT_DOMAIN,
       storefrontAccessToken: env.PUBLIC_STOREFRONT_API_TOKEN,
-      withPrivacyBanner: false,
+      withPrivacyBanner: true,
       // localize the privacy banner
       country: args.context.storefront.i18n.country,
       language: args.context.storefront.i18n.language,
     },
+    gtmContainerId: args.context.env.GTM_CONTAINER_ID,
   };
 }
 
@@ -110,7 +114,9 @@ async function loadCriticalData({context}: LoaderFunctionArgs) {
     // Add other queries here, so that they are loaded in parallel
   ]);
 
-  return {header};
+  return {
+    header,
+  };
 }
 
 /**
@@ -162,7 +168,32 @@ export function Layout({children}: {children?: React.ReactNode}) {
             shop={data.shop}
             consent={data.consent}
           >
-            <PageLayout {...data}>{children}</PageLayout>
+            <PageLayout {...data}>
+              <Script
+                type="text/partytown"
+                dangerouslySetInnerHTML={{
+                  __html: `
+              dataLayer = window.dataLayer || [];
+
+              window.gtag = function () {
+                dataLayer.push(arguments);
+              };
+
+              window.gtag('js', new Date());
+              window.gtag('config', "${data.gtmContainerId}");
+            `,
+                }}
+              />
+
+              <PartytownGoogleTagManager gtmContainerId={data.gtmContainerId} />
+
+              <Partytown
+                nonce={nonce}
+                forward={['dataLayer.push', 'gtag']}
+                resolveUrl={maybeProxyRequest}
+              />
+              {children}
+            </PageLayout>
           </Analytics.Provider>
         ) : (
           children
