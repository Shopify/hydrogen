# yaml-language-server: $schema=../../recipe.schema.json

gid: cd59a36d-90c6-4792-910c-672bded9211b
title: Partytown + Google Tag Manager
summary: Add Partytown web worker integration for Google Tag Manager to improve
  performance
description: |
  This recipe integrates Partytown with your Hydrogen storefront to run Google Tag Manager 
  and other third-party scripts in a web worker, keeping the main thread free for critical 
  rendering tasks.

  Key features:
  - Moves GTM and analytics scripts off the main thread
  - Improves Core Web Vitals scores
  - Maintains full GTM functionality
  - Includes CORS reverse proxy for third-party scripts
  - CSP headers configured for GTM domains
notes:
  - TypeScript users need to manually add GTM types to `env.d.ts`.
requirements: |
  - Google Tag Manager container ID (remember to set your `GTM_CONTAINER_ID` or `GTM_ID` environment variable)
  - Basic understanding of web workers and CSP
  - Node.js 18.0.0 or higher
ingredients:
  - path: templates/skeleton/app/components/PartytownGoogleTagManager.tsx
    description: Component that loads GTM scripts in a web worker via Partytown
  - path: templates/skeleton/app/routes/reverse-proxy.ts
    description: Reverse proxy route for third-party scripts requiring CORS headers
  - path: templates/skeleton/app/utils/partytown/maybeProxyRequest.ts
    description: URL resolver to control which scripts should be reverse-proxied
  - path: templates/skeleton/app/utils/partytown/partytownAtomicHeaders.ts
    description: Helper utility to enable Partytown atomic mode for better performance
deletedFiles: []
steps:
  - type: PATCH
    step: "1"
    name: Ignore Partytown library files
    description: Add `public/~partytown` to ignore Partytown library files.
    diffs:
      - file: .gitignore
        patchFile: .gitignore.0c7440.patch
  - type: NEW_FILE
    step: "2"
    name: Create GTM web worker component
    description: Add a GTM component that loads scripts in a web worker.
    ingredients:
      - path: templates/skeleton/app/components/PartytownGoogleTagManager.tsx
  - type: PATCH
    step: "3"
    name: Document Partytown setup
    description: Document Partytown setup and configuration instructions.
    diffs:
      - file: README.md
        patchFile: README.md.db10ed.patch
  - type: NEW_FILE
    step: "4"
    name: Add CORS reverse proxy
    description: Reverse the proxy route for third-party scripts requiring CORS headers.
    ingredients:
      - path: templates/skeleton/app/routes/reverse-proxy.ts
  - type: PATCH
    step: "5"
    name: Configure CSP headers
    description: Configure the CSP headers for GTM and Google Analytics domains.
    diffs:
      - file: app/entry.server.tsx
        patchFile: entry.server.tsx.b35f11.patch
  - type: NEW_FILE
    step: "6"
    name: Add URL resolver for proxying
    description: Add a URL resolver to control which scripts should be reverse-proxied.
    ingredients:
      - path: templates/skeleton/app/utils/partytown/maybeProxyRequest.ts
  - type: PATCH
    step: "7"
    name: Initialize Partytown and GTM
    description: Initialize Partytown and GTM in the root layout.
    diffs:
      - file: app/root.tsx
        patchFile: root.tsx.5e9998.patch
  - type: NEW_FILE
    step: "8"
    name: Enable atomic mode
    description: Add a helper utility to enable Partytown atomic mode for better
      performance.
    ingredients:
      - path: templates/skeleton/app/utils/partytown/partytownAtomicHeaders.ts
  - type: PATCH
    step: "9"
    name: Install Partytown
    description: Add a Partytown dependency and npm script for copying library files.
    diffs:
      - file: package.json
        patchFile: package.json.f30b0a.patch
  - type: PATCH
    step: "10"
    name: Configure Vite for Partytown
    description: Configure Vite to exclude Partytown library from build optimization.
    diffs:
      - file: vite.config.ts
        patchFile: vite.config.ts.475b4c.patch
nextSteps: |
  After applying this recipe:

  1. Install dependencies:
    ```bash
    npm install
    ```
  2. Copy Partytown library files:
    ```bash
    npm run partytown
    ```

  3. Add your GTM container ID to `.env`:
    ```bash
    GTM_CONTAINER_ID=GTM-XXXXXXX
    ```

  4. For TypeScript projects, update `env.d.ts`:
    ```typescript
    interface Env extends HydrogenEnv {
      GTM_CONTAINER_ID?: `GTM-${string}`;
      GTM_ID?: `GTM-${string}`;
    }
    ```

  5. Test your implementation:
    ```bash
    npm run dev
    ```

  Visit your site and check the Network tab to verify GTM is loading via the web worker.
llms:
  userQueries: []
  troubleshooting: []
commit: 0511444a026f5b80c3927fbc2e31b1ab827cfeae
