# yaml-language-server: $schema=../../recipe.schema.json

title: Bundles
summary: |
  Display product bundles on your Hydrogen storefront.
description: >
  This recipe adds special styling for product bundles on your Hydrogen storefront. Customers will see
  badges and relevant cover images for bundles when they're viewing product and collection pages.



  In this recipe you'll make the following changes:



  1. Set up the Shopify Bundles app in your Shopify admin and create a new
  product bundle.


  2. Update the GraphQL fragments to query for bundles to identify bundled products.


  3. Update the product and collection templates to display badges on product
  listings, update the copy for the cart buttons, and display bundle-specific
  information on product and collection pages.


  4. Update the cart line item template to display the bundle badge as needed.
notes: []
requirements: >
  To use product bundles, you need to install a bundles app in your
  Shopify admin.

  In this recipe, we'll use the [Shopify Bundles
  app](https://apps.shopify.com/shopify-bundles).
ingredients:
  - path: templates/skeleton/app/components/BundleBadge.tsx
    description: A badge displayed on bundle product listings.
  - path: templates/skeleton/app/components/BundledVariants.tsx
    description: A component that wraps the variants of a bundle product in a single
      product listing.
deletedFiles: []
steps:
  - type: INFO
    index: 1
    name: Set up the Shopify Bundles app
    description: |
      1. Install the [Shopify Bundles app](https://apps.shopify.com/shopify-bundles) in your Shopify admin.

      2. Make sure your store meets the [eligibility requirements](https://help.shopify.com/en/manual/products/bundles/eligibility-and-considerations).

      3. From the [**Bundles**](https://admin.shopify.com/apps/shopify-bundles/app) page, [create a new bundle](https://help.shopify.com/en/manual/products/bundles/shopify-bundles).
  - type: COPY_INGREDIENTS
    index: 2
    name: Add ingredients to your project
    description: Copy all the files found in the `ingredients/` directory into your project.
    ingredients:
      - templates/skeleton/app/components/BundleBadge.tsx
      - templates/skeleton/app/components/BundledVariants.tsx
  - type: PATCH
    index: 3
    name: Update the product fragment to query for bundles and display BundledVariants
    description: >
      - Add the `requiresComponents` field to the `Product` fragment, which is
      used to identify bundled products.

      - Pass the `isBundle` flag to the `ProductImage` component.
    diffs:
      - file: app/routes/products.$handle.tsx
        patchFile: products.$handle.tsx.3e0b7e.patch
  - type: PATCH
    index: 4
    name: Update the collections fragment to query for bundles
    description: >
      Like the previous step, use the `requiresComponents` field to detect if the product item is a
      bundle.
    diffs:
      - file: app/routes/collections.$handle.tsx
        patchFile: collections.$handle.tsx.951367.patch
  - type: PATCH
    index: 5
    name: Update the cart fragment to query for bundles
    description: >
      Use the `requiresComponents` field to determine if a cart
      line item is a bundle.
    diffs:
      - file: app/lib/fragments.ts
        patchFile: fragments.ts.e8eb04.patch
  - type: PATCH
    index: 6
    name: Conditionally render the BundleBadge in cart line items
    description: >
      If a product is a bundle, show the `BundleBadge` component in the cart
      line item.
    diffs:
      - file: app/components/CartLineItem.tsx
        patchFile: CartLineItem.tsx.8e657b.patch
  - type: PATCH
    index: 7
    name: Conditionally render "Add bundle to cart" in ProductForm
    description: |
      If a product is a bundle, update the text of the product button.
    diffs:
      - file: app/components/ProductForm.tsx
        patchFile: ProductForm.tsx.8e409a.patch
  - type: PATCH
    index: 8
    name: Conditionally render the BundleBadge in ProductImage
    description: >
      If a product is a bundle, show the `BundleBadge` component in the
      `ProductImage` component.
    diffs:
      - file: app/components/ProductImage.tsx
        patchFile: ProductImage.tsx.4e6c4c.patch
  - type: PATCH
    index: 9
    name: Conditionally render the BundleBadge in ProductItem
    description: >
      If a product is a bundle, show the `BundleBadge` component in the
      `ProductItem` component.
    diffs:
      - file: app/components/ProductItem.tsx
        patchFile: ProductItem.tsx.8ddc67.patch
  - type: PATCH
    index: 10
    name: Add a product-image class to the app stylesheet
    description: |
      Make sure the bundle badge is positioned relative to the product image.
    diffs:
      - file: app/styles/app.css
        patchFile: app.css.e88d35.patch
llms:
  userQueries: []
  troubleshooting: []
commit: 658f0c7ed75d10c0789d426a1dbc771e31a6c2a9
